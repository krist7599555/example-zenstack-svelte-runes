datasource db {
    provider = 'sqlite'
    url = 'file:../dev.sqlite'
}

generator client {
    provider = "prisma-client-js"
    output = "../node_modules/@prisma-app/client"
}

plugin prisma {
    provider = '@core/prisma'
    output = '.zenstack/schema.prisma'
    format = true
    generateClient = true
}

plugin zod {
    provider = '@core/zod'
    output = '.zenstack/zod'
    compile = false
    modelOnly = false
}

plugin enhancer {
  provider = '@core/enhancer'
  preserveTsFiles = true
}

plugin tanstack {
    provider = '@zenstackhq/tanstack-query'
    output = '.zenstack/tanstack'
    target = 'svelte'
    version = 'v5'
}

model Auth {
    id String @id @default(cuid())
    username String @unique
    password String @password @omit
    role String @default("admin") // "admin" | "part-time" | "in-active" 
    
    @@auth
    
    @@allow('create', true)
    @@allow('read', true)
    @@allow('update', auth().role == "admin")
    @@deny('delete', true)
}

model User {
    id String @id @default(cuid())
    phone String @unique @length(10)
    name String
    orders Order[]
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    @@allow('all', auth() != null)
}

model Product {
    id String @id @default(cuid())
    name String
    description String @default('')
    price Int
    orderItems OrderItem[]
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    @@allow('all', auth() != null)
}

model Order {
    id String @id @default(cuid())
    items OrderItem[]
    user User @relation(fields: [userId], references: [id])
    userId String
    price Int
    note String @default('')
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    @@allow('all', auth() != null)
}

model OrderItem {
    id String @id @default(cuid())
    orderId String
    order Order @relation(fields: [orderId], references: [id])
    productId String
    product Product @relation(fields: [productId], references: [id])
    price Int
    note String @default('')
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    @@allow('all', auth() != null)
}